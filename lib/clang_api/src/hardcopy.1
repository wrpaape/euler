      (aka 'struct SetNode *') from 'const SetType *' (aka
      'const struct SetNode *') discards qualifiers
      [-Wincompatible-pointer-types-discards-qualifiers]
  set_ptr = PROB_SET;
          ^ ~~~~~~~~
../lib/clang_api.c:49:19: error: invalid operands to binary expression
      ('SetType' (aka 'struct SetNode') and 'void *')
  while (*set_ptr != NULL) {
         ~~~~~~~~ ^  ~~~~
../lib/clang_api.c:51:13: warning: passing 'const struct ProbNode *' to
      parameter of type 'ProbType *' (aka 'struct ProbNode *') discards
      qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
      solve(set_ptr -> prob_ptr, prob_num);
            ^~~~~~~~~~~~~~~~~~~
../include/clang_api.h:22:22: note: passing argument to parameter 'prob_ptr'
      here
void solve(ProbType *prob_ptr, const unsigned int prob_num);
                     ^
../lib/clang_api.c:55:13: warning: assigning to 'SetType *'
      (aka 'struct SetNode *') from 'const struct SetNode *' discards
      qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    set_ptr = set_ptr -> next_ptr;
            ^ ~~~~~~~~~~~~~~~~~~~
../lib/clang_api.c:66:20: error: invalid operands to binary expression
      ('ProbType' (aka 'struct ProbNode') and 'void *')
  while (*prob_ptr != NULL) {
         ~~~~~~~~~ ^  ~~~~
../lib/clang_api.c:71:14: warning: assigning to 'ProbType *'
      (aka 'struct ProbNode *') from 'const struct ProbNode *' discards
      qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    prob_ptr = prob_ptr -> next_ptr;
             ^ ~~~~~~~~~~~~~~~~~~~~
warning: format specifies type 'unsigned int' but the argument has type
      '<dependent type>' [-Wformat]
../lib/clang_api.c:74:79: error: use of undeclared identifier 'set_num'
  ...problem number %u not found in problem set %u!", prob_num, set_num);
                                                                ^
5 warnings and 4 errors generated.
make: *** [obj/clang_api.o] Error 1

lib/clang_api/src  master                                        23m  ‘ Ò  I
¶
